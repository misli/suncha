version: '3.4'
services:

  leprikon:
    image: misli/suncha
    build: .
    depends_on:
      - memcached
      - mysql
      - smtp
      - chat
    environment:
      DATABASE_ENGINE: django.db.backends.mysql
      DATABASE_HOST: ''
      DATABASE_NAME: suncha
      DATABASE_USER: suncha
      DATABASE_PASSWORD: dbpassword
      EMAIL_HOST: smtp
      EMAIL_HOST_USER: suncha
      EMAIL_HOST_PASSWORD: emailpassword
      EMAIL_SUBJECT_PREFIX: '[Suncha]'
      LEPRIKON_CHAT_NAME: 'Suncha'
      LEPRIKON_CHAT_USERNAME: suncha
      MEMCACHED_LOCATION: memcached:11211
      MONGO_URL: mongodb://mongo:27017/rocketchat
      ROCKETCHAT_API_URL: http://chat:3000/_chat
      SECRET_KEY: secretkey
      SERVER_EMAIL: '"Suncha" <suncha@suncha.cz>'
    ports:
      - 127.0.0.1:9020:80
    volumes:
      - ./data:/app/data
      - ./media:/app/htdocs/media
      - mysql:/var/run/mysqld

  memcached:
    image: memcached

  mysql:
    image: mariadb
    environment:
      MYSQL_DATABASE: suncha
      MYSQL_USER: suncha
      MYSQL_PASSWORD: dbpassword
      MYSQL_ROOT_PASSWORD: rootdbpassword
    volumes:
      - mysql:/var/run/mysqld
      - ./mysql:/var/lib/mysql

  mongo:
    image: mongo:4
    hostname: mongo
    volumes:
     - ./mongo:/data/db
    command: mongod --oplogSize 128 --replSet rs0

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo

  chat:
    image: rocketchat/rocket.chat:latest
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    volumes:
      - ./uploads:/app/uploads
    environment:
      PORT: 3000
      MONGO_URL: mongodb://mongo:27017/rocketchat
      MONGO_OPLOG_URL: mongodb://mongo:27017/local
      ROOT_URL: https://suncha.cz/_chat
    depends_on:
      - mongo

  smtp:
    image: catatnight/postfix
    environment:
      maildomain: suncha.cz
      smtp_user: suncha:emailpassword
    stdin_open: true
    tty: true
    volumes:
      - ./dkim:/etc/opendkim/domainkeys
    ports:
      - 127.0.0.1:1025:25/tcp

  faktury:
    image: nginx
    ports:
      - 127.0.0.1:9022:80/tcp
    volumes:
      - ./faktury/nginx.conf:/etc/nginx/nginx.conf:ro
      - invoiceninja:/var/www/app/public:ro
      - ./faktury/storage:/var/www/app/storage:ro
      - ./faktury/logo:/var/www/app/public/logo:ro

  invoiceninja:
    image: invoiceninja/invoiceninja:4.5.14
    environment:
      APP_CIPHER: AES-256-CBC
      APP_DEBUG: '0'
      APP_ENV: production
      APP_KEY: appkey
      APP_LOCALE: cs
      APP_URL: https://faktury.suncha.cz
      DB_DATABASE: ninja
      DB_HOST: invoiceninjadb
      DB_PASSWORD: dbpassword
      DB_TYPE: mysql
      DB_USERNAME: ninja
      MAIL_DRIVER: smtp
      MAIL_FROM_ADDRESS: suncha@suncha.cz
      MAIL_FROM_NAME: InvoiceNinja
      MAIL_HOST: smtp
      MAIL_PORT: '25'
      MAIL_ENCRYPTION: ''
      MAIL_PASSWORD: emailpassword
      MAIL_USERNAME: suncha
    volumes:
      - invoiceninja:/var/www/app/public
      - invoiceninjadb:/var/run/mysqld
      - ./faktury/storage:/var/www/app/storage
      - ./faktury/logo:/var/www/app/public/logo

  invoiceninjadb:
    image: mariadb
    environment:
      MYSQL_DATABASE: ninja
      MYSQL_PASSWORD: dbpassword
      MYSQL_ROOT_PASSWORD: rootdbpassword
      MYSQL_USER: ninja
    volumes:
      - invoiceninjadb:/var/run/mysqld
      - ./invoiceninjadb:/var/lib/mysql

volumes:
  mysql:
  invoiceninja:
  invoiceninjadb:
